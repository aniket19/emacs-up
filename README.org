* Introduction
  ~emacs-up~ is a bare-bones, quick-start Emacs configuration. It is
  meant to get newcomers started and productive with Emacs and
  contains the minimal configuration required to satisfy employee asks
  inside Helpshift. ~emacs-up~ is currently configured for Clojure
  programming only, but I'm hoping that it will soon be expanded to
  include other programming languages used within Helpshift.

* Installation
  - The minimum supported Emacs version for this configuration is
    Emacs 24.4. I recommend that you use Emacs 25 with this
    configuration. You can install Emacs 25 through brew as follows:
    #+begin_example
      $ brew install emacs --devel
    #+end_example
  - The minimum supported Clojure version is ~1.7.0~. This is a hard
    requirement of the ~cider~ package, from version ~0.11.0~ onward.
    The last CIDER version to support Clojure 1.6 and below is
    ~0.10.2~. However, this version does not exist in any public ELPA
    repository (as of now).
  - Clone ~emacs-up~ to your machine as your ~.emacs.d~ folder.
    #+begin_example
      $ git clone https://github.com/helpshift/emacs-up.git ~/.emacs.d
    #+end_example
  - Create a ~.lein/profiles.clj~ file in your home directory.
    + The contents of the file should be as follows:
      #+begin_src clojure
        {:repl {:plugins [[cider/cider-nrepl "0.13.0"]
                          [refactor-nrepl "2.2.0"]]
                :dependencies [^:replace [org.clojure/tools.nrepl "0.2.12"]]}}
      #+end_src
    + You don't need the cider-nrepl or refactor-nrepl plugin section
      if you use ~cider-jack-in~ to start your REPL and connect to it.
      We don't use ~cider-jack-in~ at Helpshift, for reasons outside
      the scope of this document.
    + Changes will not apply to REPLs that are already running. After
      creating the ~profiles.clj~ file, you need to stop and restart
      running REPLs.
  - Fire up Emacs and wait for it to download packages (This is a
    one-time thing).
  - (For beginners) Go through the tutorial in the ~docs/~ folder to
    get started.

* Happy Programming! May the force be with you.
